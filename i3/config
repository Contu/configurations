
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $gapsOuter -4
set $gapsInner 10

gaps inner $gapsInner
gaps outer $gapsOuter

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

set $term urxvt
set $borderPix 2

for_window [class="^.*"] border pixel $borderPix

#run mpd daemon (userspace)
exec --no-startup-id ~/bin/mpd-start.sh

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal
#for_window [class="^URxvt$"] border pixel $borderPix
# start ranger file manager
bindsym $mod+z exec $term -name ranger -e ranger
# start text editor
bindsym $mod+x exec emacs
# start browser
bindsym $mod+b exec qutebrowser
# show ncmpcpp
bindsym $mod+n [instance="music"] scratchpad show; [instance="music"] move position center
# show calculator
bindsym $mod+c [instance="calculator"] scratchpad show; [instance="calculator"] move position center  
# start neomutt
bindsym $mod+m exec $term -name mutt -e neomutt 
# start htop
bindsym $mod+j exec $term -e htop
# start calcurse
bindsym $mod+g exec $term -name cal -e calcurse

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run -l 10
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
#bindsym $mod+j focus left
#bindsym $mod+k focus down
#bindsym $mod+l focus up
#bindsym $mod+ograve focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+ograve move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

set $workspace1 1
set $workspace2 2
set $workspace3 3
set $workspace4 4
set $workspace5 5
set $workspace6 6
set $workspace7 7
set $workspace8 8
set $workspace9 9
set $workspace10 10

# use workspaces on different monitors
# set $mon1 LVDS1
# set $mon2 VGA1
# workspace $workspace1 output $mon1
# workspace $workspace2 output $mon1
# workspace $workspace3 output $mon1
# workspace $workspace4 output $mon1
# workspace $workspace5 output $mon1
# workspace $workspace6 output $mon2
# workspace $workspace7 output $mon2
# workspace $workspace8 output $mon2
# workspace $workspace9 output $mon2
# workspace $workspace10 output $mon2

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

# start emacs on workspace 1
assign [class="^Emacs"] $workspace1
for_window [class="^Emacs"] focus
#for_window [class="^Emacs"] border pixel $borderPix

# start qutebrowser on workspace 2
assign [class="^qutebrowser$"] $workspace2
for_window [class="^qutebrowser$"] focus

# start ranger on workspace 3
#assign [class="^URxvt$" instance="^ranger$"] $workspace3
#for_window [class="^URxvt$" instance="^ranger$"] focus

# start mutt on workspace 4
assign [class="^URxvt$" instance="^mutt$"] $workspace3
for_window [class="^URxvt$" instance="^mutt$"] focus
# for_window [class="^URxvt$" instance="^mutt$"] border pixel $borderPix

#for_window [class="^MuPDF$"] border pixel $borderPix
#for_window [class="^feh$"] border pixel $borderPix
#for_window [class="^mpv$"] border pixel $borderPix

bindsym $mod+k exec ~/bin/cam-toggle.sh
for_window [title="video0 - mpv"] floating enable
for_window [title="video0 - mpv"] sticky enable

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace10

# set up wallpaper
exec --no-startup-id ~/.fehbg
# run compton
exec --no-startup-id compton -b
# run ncmpcpp music player client
for_window [instance="music"] floating enable
for_window [instance="music"] resize set 1000 600
for_window [instance="music"] move scratchpad
#for_window [instance="music"] border pixel $borderPix
exec --no-startup-id $term -name music -e ncmpcpp
# run calculator
for_window [instance="calculator"] floating enable
for_window [instance="calculator"] resize set 700 250
for_window [instance="calculator"] move scratchpad
exec --no-startup-id $term -name calculator -e bc -l

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 5 px or 5 ppt
        bindsym k resize grow height 5 px or 5 ppt
        bindsym l resize shrink height 5 px or 5 ppt
        bindsym ograve resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym Down resize grow height 5 px or 5 ppt
        bindsym Up resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	#mode hide	
	#hidden_state show
    	#modifier Mod4
        status_command i3status
	status_command i3blocks
        tray_output primary
	position top
	font pango:Source Sans Pro-10 9
	colors {
	      separator #268bd2
	       background #002b36
	      background #000000
	      statusline #839496
	      focused_workspace #088A29 #088A29 #fdf6e3
	      active_workspace #088A29 #088A29 #fdf6e3
	      inactive_workspace #848484 #848484 #002b36
	      urgent_workspace #d33682 #d33682 #fdf6e3
	}

}

bindsym $mod+Shift+b bar mode toggle

#exec_always --no-startup-id ~/.config/polybar/launch.sh

# run network manager
exec --no-startup-id nm-applet

client.focused #073642 #073642 #eee8d5 #6c71c4
client.focused_inactive #FFCCCC #FFCCCC #eee8d5 #6c71c4
client.unfocused #C0C0C0 #C0C0C0 #000000 #586e75
client.urgent #d33682 #d33682 #fdf6e3 #dc322f

bindsym XF86AudioRaiseVolume exec amixer -q -D pulse sset Master 5%+; exec pkill -RTMIN+10 i3blocks 
bindsym XF86AudioLowerVolume exec amixer -q -D pulse sset Master 5%-; exec pkill -RTMIN+10 i3blocks
bindsym XF86AudioMute exec amixer -q -D pulse sset Master toggle; exec pkill -RTMIN+10 i3blocks

bindsym XF86AudioMicMute exec amixer -q -D pulse sset Capture toggle; exec pkill -RTMIN+11 i3blocks
#bindsym XF86WebCam exec amixer -q -D pulse sset Capture 5%-; exec pkill -RTMIN+10
bindsym XF86Display exec --no-startup-id  ~/bin/screens.sh
#XF86WebCam
#XF86WebDisplay

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec light -A 5; exec pkill -RTMIN+12 i3blocks # increase screen brightness
bindsym XF86MonBrightnessDown exec light -U 5; exec pkill -RTMIN+12 i3blocks  # decrease screen brightness

# Touchpad controls
#bindsym XF86TouchpadToggle exec /some/path/toggletouchpad.sh # toggle touchpad

# Media player controls
bindsym XF86AudioPlay exec mpc toggle; exec pkill -RTMIN+9 i3blocks;
#bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec mpc next; exec pkill -RTMIN+9 i3blocks;
bindsym XF86AudioPrev exec mpc prev; exec pkill -RTMIN+9 i3blocks;
# refresh mpd i3blocks component
bindsym $mod+Shift+n exec pkill -RTMIN+9 i3blocks;

# screenshot all screen
bindsym Print exec import -window root ~/Pictures/screenshot/`date +%d:%m:%g_%H:%M:%S`.jpg
# screenshot active window
bindsym $mod+Print exec import -window `xprop -root _NET_ACTIVE_WINDOW | cut -d ' ' -f 5` ~/Pictures/screenshot/`date +%d:%m:%g_%H:%M:%S`.jpg
# screenshot region selected
bindsym $mod+Shift+Print exec --no-startup-id ~/bin/screenshot_region.sh

bindsym $mod+l exec --no-startup-id ~/bin/i3/i3exit.sh lock
bindsym XF86ScreenSaver exec --no-startup-id ~/bin/i3/i3exit.sh lock

set $mode_system System (l) logout, (u) suspend, (h) hibernate, (r) reboot, (s) shutdown
mode "$mode_system" {
    
    bindsym l exec --no-startup-id ~/bin/i3/i3exit.sh logout, mode "default"
    bindsym u exec --no-startup-id ~/bin/i3/i3exit.sh suspend, mode "default"
    bindsym h exec --no-startup-id ~/bin/i3/i3exit.sh hibernate, mode "default"
    bindsym r exec --no-startup-id ~/bin/i3/i3exit.sh reboot, mode "default"
    bindsym s exec --no-startup-id ~/bin/i3/i3exit.sh shutdown, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+e mode "$mode_system"

# i3-gaps dynamic gaps
bindsym $mod+Shift+plus gaps inner current plus 5
bindsym $mod+Shift+minus gaps inner current minus 5
bindsym $mod+Shift+d gaps inner all set $gapsInner; gaps outer all set $gapsOuter

# set $mode_gaps Gaps: (o) outer, (i) inner, (d) default
# set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
# set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
#bindsym $mod+Shift+g mode "$mode_gaps"
# mode "$mode_gaps" {
#         bindsym o      mode "$mode_gaps_outer"
#         bindsym i      mode "$mode_gaps_inner"
# 	bindsym d      gaps inner all set $gapsInner; gaps outer all set $gapsOuter
#         bindsym Return mode "default"
#         bindsym Escape mode "default"
# }

# mode "$mode_gaps_inner" {
#         bindsym plus  gaps inner current plus 5
#         bindsym minus gaps inner current minus 5
#         bindsym 0     gaps inner current set 0
	
#         bindsym Shift+plus  gaps inner all plus 5
#         bindsym Shift+minus gaps inner all minus 5
#         bindsym Shift+0     gaps inner all set 0

#         bindsym Return mode "default"
#         bindsym Escape mode "default"
# }
# mode "$mode_gaps_outer" {
#         bindsym plus  gaps outer current plus 5
#         bindsym minus gaps outer current minus 5
#         bindsym 0     gaps outer current set 0

#         bindsym Shift+plus  gaps outer all plus 5
#         bindsym Shift+minus gaps outer all minus 5
#         bindsym Shift+0     gaps outer all set 0

#         bindsym Return mode "default"
#         bindsym Escape mode "default"
# }
